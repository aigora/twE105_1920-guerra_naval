#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <ctype.h>
#include <string.h>

typedef struct datos
{
    char nombre[20];
    int edad;
    int correctas;
    int incorrectas;
    int correctas_comp;
    int incorrectas_comp;
} datos;

int transformanumero(char num);
int transformaletra(char letra);
void iniciartablero(int m[10][10]);
int gameover(int m[10][10], int cont);
void posiciona(int m[10][10]);
void imprimetablero(int m[10][10]);
void turnoJugador(int m[10][10], int m2[10][10], int m3[10][10],datos *d);

void portaaviones(int m[10][10]);
void acorazado(int m[10][10]);
void submarino(int m[10][10]);
void crucero(int m[10][10]);
void destructor(int m[10][10]);
void ataque_de_la_computadora(int m[10][10], int m2[10][10],datos *d);
void portaaviones_comp(int m[10][10]);
void acorazado_comp(int m[10][10]);
void submarino_comp(int m[10][10]);
void crucero_comp(int m[10][10]);
void destructor_comp(int m[10][10]);
void posiciona_comp(int m[10][10]);
int i,j;

int main()
{
	FILE *fich;
   
   fich=fopen("RESUMEN_BATALLA_NAVAL.txt","w");
	
   datos d;
   
   printf("\nIntroduzca su nombre:\t");
   scanf("%s",d.nombre);
   
   printf("\nIntroduzca su edad:\t");
   scanf("%d",&d.edad);
	
	d.correctas =0;
	d.incorrectas =0;
	d.correctas_comp =0;
	d.incorrectas_comp =0;
	
   int findeljuego = 0, cont1 = 0, cont2 = 0;

   int jugador1[10][10], jugador2 [10][10], movimientos[10][10];
	

   iniciartablero(jugador1);
   iniciartablero(jugador2);
   iniciartablero(movimientos);
   

   printf("Jugador 1, coloca tus barcos:\n");
   posiciona(jugador1);


   printf("Jugador 2, coloca tus barcos:\n");
   posiciona_comp(jugador2);

//Se leen los turnos de los jugadores y se indica si ha ganado o  ha perdido para ambos jugadores

//Despues de eliminar las posiciones del oponwete se saldrá del juego 



   while(findeljuego == 0){

       if(gameover(jugador1, cont1) == 0){

           system("cls");
           printf("Turno, Jugador 1:\n");
           imprimetablero(jugador1);
           printf("Tablero con tus movimientos:\n");
           imprimetablero(movimientos);
           system("COLOR 02");
           turnoJugador(jugador2, jugador1, movimientos,&d);//  (jugador x <- judaros y) 

           if(gameover(jugador2, cont2)){
               findeljuego = 1;
               system("cls");
               
               system("COLOR A0");
               imprimetablero(jugador1);
               printf("\n");
               printf("\nHa ganado Jugador 1\n");
           }
       }

       if(gameover(jugador2, cont2) == 0){
           system("cls");
           printf("Turno, Jugador 2:\n");
          //  imprimetablero(jugador2);
           ataque_de_la_computadora(jugador1, jugador2,&d);

           if(gameover(jugador1, cont1)){
               findeljuego = 1;
               system("cls");
               imprimetablero(jugador2);
               system("COLOR 02");              
               printf("\n");
               printf("\nHa ganado Jugador 2\n");
           }
       }
   }
   
   fprintf(fich, "nombre: %s \n", d.nombre);
   fprintf(fich, "edad: %d \n", d.edad);
   fprintf(fich, "movimientos correctos: %d \n", d.correctas);
   fprintf(fich, "movimientos incorrectos: %d \n", d.incorrectas);
   fprintf(fich, "movimientos correctos computadora: %d \n", d.correctas_comp);
   fprintf(fich, "movimientos incorrectos computadora: %d \n", d.incorrectas_comp);
   
   fclose(fich);
   
   return 0;
}




/* Esta funcion va a transformar letras a numeros */
int transformaletra(char letra)
{
   int coordenada;

   if(letra >= 'A' || letra < 'Z'){
       coordenada = letra - 65;  // porque en el codigo ascii esa nueva posicion es un numero
   }

   return(coordenada);
}

int transformanumero(char num)
{
   int coordenada;

   if(num >= '0' || num < '9'){
       coordenada = num - 48;
   }

   return(coordenada);
}

/* Esta funcion va iniciar el tablero desde la posicion 0 */
void iniciartablero(int m[10][10]){

for(i = 0; i < 10; i++){
       for (j = 0; j < 10; j++){
           m[i][j]= 0;
}
}
}

/* Esta funcion va a detectar el fin del juego */

int gameover(int m[10][10], int cont2){

   int res = 0, cont1 = 0;

   for(i = 0; i < 10; i++){
       for (j = 0; j < 10; j++){
       if(m[i][j] == 2){
           cont1 += 1;
       }
       
       if(m[i][j] == 2 || m[i][j] == 1){
        cont2++;
}
   }
}

if(cont1 == cont2){
       res = 1;
}

return (res);
}
void imprimetablero(int m[10][10]){

   for(i = 0; i <= 10; i++){
       if(i == 0){
           printf("  ");
       } else{
           printf("%c ", 'A'+i-1);
       }
   }

   printf("\n");

   for(i=0; i<10; i++){
       printf("%d ", i);

       for (j=0; j<10; j++){

           if(m[i][j] == 1){
               printf("# ");
           }else if(m[i][j] == 2){
            printf("X ");
}else{
               printf("~ ");
           }
       }
       printf("\n");
   }
}

/*Esta funcion va a hundir la flota del oponete a través de turnos */
void turnoJugador(int m[10][10], int m2[10][10], int m3[10][10],datos *d){
   char letra, fila;
   int filas, columna;

       do{
do{

       printf("Introduce una fila: ");
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       
       }while(filas < 0 || filas > 10);
}while(!isdigit(fila));

       do{
        do{
           printf("Introduce una columna: ");
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra  = toupper(letra);
           columna = transformaletra(letra);
           }while(columna >= 10 || columna < 0);
       }while(isdigit(letra));

       columna = transformaletra(letra);

   if(m[filas][columna] == 1){
   	(*d).correctas ++;
       printf("\nBarco Tocado\n");
       m[filas][columna] = 2;
       m3[filas][columna] = 2;
       system("COLOR 4f");

       printf("\nPulsa enter para acabar el turno");
       getch();
       system("COLOR 07");

   }else{
    (*d).incorrectas ++;
       system("COLOR 30");
       printf("\nAgua\n");
       m3[filas][columna] = 2;
       printf("\nPulsa enter para acabar el turno");
       getch();
       system("COLOR 07");
   }
}

/* Esta funcion va a realizar la colocacion de cada barco en las posiciones pedidas */
void posiciona(int m[10][10]){
   
   imprimetablero(m);
   portaaviones(m);
   acorazado(m);
   submarino(m);
   crucero(m);
   destructor(m);

   system("cls");
}
void portaaviones(int m[10][10]){

   char pos, letra, fila;
   int filas, columna;

printf("Como quieres colocar el portaaviones *****\n");
   do{
       printf("Horizonal (H), Vertical(V): ");
       scanf("%s", &pos);
   }while(toupper(pos) != 'H' && toupper(pos) != 'V' );

   switch(toupper(pos)){
   
   case 'H':
   
       do{
do{

       printf("En que fila lo quieres colocar: ");
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       
       }while(filas < 0 || filas > 10);
}while(!isdigit(fila));

      

       printf("Elije la primera columna para ubicarlo: \n");
       
       
       do{
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra  = toupper(letra);
           
           columna = transformaletra(letra);
           
          			if((columna > 5) || (columna < 0) || m[filas][columna] == 1 || m[filas][columna+1]==1 || m[filas][columna+2]==1 || m[filas][columna+3]==1 || m[filas][columna+4]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
			}
            

       }while(isdigit(letra) || (columna > 5) || (columna < 0) || m[filas][columna]==1 || m[filas][columna+1]==1 || m[filas][columna+2]==1 || m[filas][columna+4]==1);



       
       for(i = 0; i < 5; i++){
		 m[filas][columna+i] = 1;
		 }
		system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
       

       break;

   case 'V':

       do{
        do{
       
           printf("En que columna lo quieres colocar: ");
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra = toupper(letra);
           
           columna = transformaletra(letra);
           
}while(isdigit(letra));
}while ((columna >= 10) || (columna < 0));


       printf("Elije la primera fila para ubicarlo: \n");
    
       
           do{
           
            do{
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       }while(!isdigit(fila));
           
          	if((filas > 5) || (filas < 0) || m[filas][columna] == 1 || m[filas+1][columna]==1 || m[filas+2][columna]==1 || m[filas+3][columna]==1 || m[filas+4][columna]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
        }
            

			
           }while((filas > 5) || (filas < 0) || m[filas][columna]==1 || m[filas+1][columna]==1 || m[filas+2][columna]==1 || m[filas+3][columna]==1 || m[filas+4][columna]==1);

       
       for(i = 0; i < 5; i++){
		 m[filas+i][columna] = 1;
		 }

       system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
    

       break;
   }

}

void acorazado(int m[10][10]){

   char pos, letra, fila;
   int filas, columna;

printf("Como quieres colocar el acorazado ****\n");
   do{
       printf("Horizonal (H), Vertical(V): ");
       scanf("%s", &pos);
   }while(toupper(pos) != 'H' && toupper(pos) != 'V' );

   switch(toupper(pos)){
   
   case 'H':
   
       do{
do{

       printf("En que fila lo quieres colocar: ");
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       
       }while(filas < 0 || filas > 10);
}while(!isdigit(fila));

      

       printf("Elije la primera columna para ubicarlo: \n");
       
       
       do{
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra  = toupper(letra);
           
           columna = transformaletra(letra);
           
          			if((columna > 6) || (columna < 0) || m[filas][columna] == 1 || m[filas][columna+1]==1 || m[filas][columna+2]==1 || m[filas][columna+3]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
			}
            

       }while(isdigit(letra) || (columna > 6) || (columna < 0) || m[filas][columna]==1 || m[filas][columna+1]==1 || m[filas][columna+2]==1 || m[filas][columna+3]==1);



       
       for(i = 0; i < 4; i++){
		 m[filas][columna+i] = 1;
		 }
		system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
       

       break;

   case 'V':

       do{
        do{
       
           printf("En que columna lo quieres colocar: ");
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra = toupper(letra);
           
           columna = transformaletra(letra);
           
}while(isdigit(letra));
}while ((columna >= 10) || (columna < 0));


       printf("Elije la primera fila para ubicarlo: \n");
    
       
           do{
           
            do{
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       }while(!isdigit(fila));
           
          	if((filas > 6) || (filas < 0) || m[filas][columna] == 1 || m[filas+1][columna]==1 || m[filas+2][columna]==1 || m[filas+3][columna]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
        }
            

			
           }while((filas > 6) || (filas < 0) || m[filas][columna]==1 || m[filas+1][columna]==1 || m[filas+2][columna]==1 || m[filas+3][columna]==1 );

       
       for(i = 0; i < 4; i++){
		 m[filas+i][columna] = 1;
		 }

       system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
    

       break;
   }

}

void submarino(int m[10][10]){

   char pos, letra, fila;
   int filas, columna;

printf("Como quieres colocar el submarino ***\n");
   do{
       printf("Horizonal (H), Vertical(V): ");
       scanf("%s", &pos);
   }while(toupper(pos) != 'H' && toupper(pos) != 'V' );

   switch(toupper(pos)){
   
   case 'H':
   
       do{
do{

       printf("En que fila lo quieres colocar: ");
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       
       }while(filas < 0 || filas > 10);
}while(!isdigit(fila));

      

       printf("Elije la primera columna para ubicarlo: \n");
       
       
       do{
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra  = toupper(letra);
           
           columna = transformaletra(letra);
           
          			if((columna > 7) || (columna < 0) || m[filas][columna] == 1 || m[filas][columna+1]==1 || m[filas][columna+2]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
			}
            

       }while(isdigit(letra) || (columna > 7) || (columna < 0) || m[filas][columna]==1 || m[filas][columna+1]==1 || m[filas][columna+2]==1);



       
       for(i = 0; i < 3; i++){
		 m[filas][columna+i] = 1;
		 }
		system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
    

       break;

   case 'V':

       do{
        do{
       
           printf("En que columna lo quieres colocar: ");
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra = toupper(letra);
           
           columna = transformaletra(letra);
           
}while(isdigit(letra));
}while ((columna >= 10) || (columna < 0));


       printf("Elije la primera fila para ubicarlo: \n");
    
       
           do{
           
            do{
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       }while(!isdigit(fila));
           
          	if((filas > 7) || (filas < 0) || m[filas][columna] == 1 || m[filas+1][columna]==1 || m[filas+2][columna]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
        }
            

			
           }while((filas > 7) || (filas < 0) || m[filas][columna]==1 || m[filas+1][columna]==1 || m[filas+2][columna]==1);

       
       for(i = 0; i < 3; i++){
		 m[filas+i][columna] = 1;
		 }

       system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
       

       break;
   }

}

void crucero(int m[10][10]){

   char pos, letra, fila;
   int filas, columna;

printf("Como quieres colocar el crucero ***\n");
   do{
       printf("Horizonal (H), Vertical(V): ");
       scanf("%s", &pos);
   }while(toupper(pos) != 'H' && toupper(pos) != 'V' );

   switch(toupper(pos)){
   
   case 'H':
   
       do{
do{

       printf("En que fila lo quieres colocar: ");
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       
       }while(filas < 0 || filas > 10);
}while(!isdigit(fila));

      

       printf("Elije la primera columna para ubicarlo: \n");
       
       
       do{
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra  = toupper(letra);
           
           columna = transformaletra(letra);
           
          			if((columna > 7) || (columna < 0) || m[filas][columna] == 1 || m[filas][columna+1]==1 || m[filas][columna+2]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
			}
            

       }while(isdigit(letra) || (columna > 7) || (columna < 0) || m[filas][columna]==1 || m[filas][columna+1]==1 || m[filas][columna+2]==1);



       
       for(i = 0; i < 3; i++){
		 m[filas][columna+i] = 1;
		 }
		system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
       

       break;

   case 'V':

       do{
        do{
       
           printf("En que columna lo quieres colocar: ");
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra = toupper(letra);
           
           columna = transformaletra(letra);
           
}while(isdigit(letra));
}while ((columna >= 10) || (columna < 0));


       printf("Elije la primera fila para ubicarlo: \n");
    
       
           do{
           
            do{
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       }while(!isdigit(fila));
           
          	if((filas > 7) || (filas < 0) || m[filas][columna] == 1 || m[filas+1][columna]==1 || m[filas+2][columna]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
        }
            

			
           }while((filas > 7) || (filas < 0) || m[filas][columna]==1 || m[filas+1][columna]==1 || m[filas+2][columna]==1);

       
       for(i = 0; i < 3; i++){
		 m[filas+i][columna] = 1;
		 }

       system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
       

       break;
   }

}

void destructor(int m[10][10]){

   char pos, letra, fila;
   int filas, columna;

printf("Como quieres colocar el destructor **\n");
   do{
       printf("Horizonal (H), Vertical(V): ");
       scanf("%s", &pos);
   }while(toupper(pos) != 'H' && toupper(pos) != 'V' );

   switch(toupper(pos)){
   
   case 'H':
   
       do{
do{

       printf("En que fila lo quieres colocar: ");
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       
       }while(filas < 0 || filas > 10);
}while(!isdigit(fila));

      

       printf("Elije la primera columna para ubicarlo: \n");
       
       
       do{
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra  = toupper(letra);
           
           columna = transformaletra(letra);
           
          			if((columna > 8) || (columna < 0) || m[filas][columna] == 1 || m[filas][columna+1]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
			}
            

       }while(isdigit(letra) || (columna > 8) || (columna < 0) || m[filas][columna]==1 || m[filas][columna+1]==1);



       
       for(i = 0; i < 2; i++){
		 m[filas][columna+i] = 1;
		 }
		system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
       

       break;

   case 'V':

       do{
        do{
       
           printf("En que columna lo quieres colocar: ");
           fflush(stdin);
           scanf("%c", &letra);
           fflush(stdin);
           letra = toupper(letra);
           
           columna = transformaletra(letra);
           
}while(isdigit(letra));
}while ((columna >= 10) || (columna < 0));


       printf("Elije la primera fila para ubicarlo: \n");
    
       
           do{
           
            do{
       fflush(stdin);
       scanf("%c", &fila);
       fflush(stdin);        
       filas = transformanumero(fila);
       }while(!isdigit(fila));
           
          	if((filas > 8) || (filas < 0) ||  m[filas][columna] == 1 || m[filas+1][columna]==1){
            printf("\nNo puedes colocar el barco en la posicion [%d][%c]\n", filas, letra);
        }
            

			
           }while((filas > 8) || (filas < 0) || m[filas][columna]==1 || m[filas+1][columna]==1);

       
       for(i = 0; i < 2; i++){
		 m[filas+i][columna] = 1;
		 }

       system("cls");
		printf("Jugador 1, coloca tus barcos:\n");
       	imprimetablero(m);
       getch();
       

       break;
   }

}








void ataque_de_la_computadora(int m[10][10], int m2[10][10], datos *d){
//scanf=radoi
  ///char letra, fila;
   //int filas, columna;
int fila;
char columna; 
char letra;   
int h;
//preparar semilla aleatoria
srand(time(NULL));
fila = rand()%10;
srand(time(NULL));
columna = 65+rand()%9;
columna-=65;

  

   if(m[fila][columna] > 0 && m[fila][columna] != 2){
   		(*d).correctas_comp ++;
       printf("\nBarco Tocado\n");
       m[fila][columna] = 2;
       system("COLOR 4f");

       if(m2[fila][columna] != 1){
           m2[fila][columna] = 2;
       }
       printf("\nPulsa enter para acabar el turno");
       getch();
       system("COLOR 07");

   }else{
   	
		(*d).incorrectas_comp ++;
       system("COLOR 30");
       printf("\nAgua\n");
       printf("\nPulsa enter para acabar el turno");
       getch();
       system("COLOR 07");
   }
}
void portaaviones_comp(int m[10][10]){

    int pos_ale,columna,filas;//posicion aleatotria
   int h=0;
   srand(time(NULL));
   pos_ale=rand()%2;// nº aleatorio entre 0 y 1 -> para alternar aleatoriamente si es V o H   
   
   switch(pos_ale){
   case 0:
   srand(time(NULL));
       filas=rand()%10;// del 0 a   
       
       do{
          columna=rand()%6;
           
            

       }while(m[filas][columna]==1 || m[filas][columna+1]==1 || m[filas][columna+2]==1 || m[filas][columna+3]==1 || m[filas][columna+4]==1);
      
	for(i = 0; i < 5; i++){
       m[filas][columna + i] = 1;
   	}

	
        
      

       break;

    case 1:
       srand(time(NULL));
	   columna=rand()%10;
	   
           	do{
      			filas=rand()%6;
           	}while(m[filas][columna]==1 || m[filas+1][columna]==1 || m[filas+2][columna]==1 || m[filas+3][columna]==1 || m[filas+4][columna]==1);
	   
    for(i = 0; i < 5; i++){
       m[filas+ i][columna] = 1;
   	}

	    
    
        break;
   }


   printf("Portaaviones generado\n");
   getch();
}

void acorazado_comp(int m[10][10]){

	int pos_ale,columna,filas;//posicion aleatotria
   int h=0;
   srand(time(NULL));
   pos_ale=rand()%2;// nº aleatorio entre 0 y 1 -> para alternar aleatoriamente si es V o H   
   
   switch(pos_ale){
   case 0:
   srand(time(NULL));
       filas=rand()%10;// del 0 a   
       
       	do{
          	columna=rand()%7;
            

       	}while(m[filas][columna]==1 || m[filas][columna+1]==1 || m[filas][columna+2]==1 || m[filas][columna+3]==1);
      
	for(i = 0; i < 4; i++){
       m[filas][columna + i] = 1;
   	}

	
     
       

       break;

    case 1:
       srand(time(NULL));
	   columna=rand()%10;
	   
	   
           do{
           
      		filas=rand()%7;
           	
           }while(m[filas][columna]==1 || m[filas+1][columna]==1 || m[filas+2][columna]==1 || m[filas+3][columna]==1);
	   
    for(i = 0; i < 4; i++){
       m[filas+ i][columna] = 1;
   	}

		   
   
        break;
   }
printf("Acorazado generado\n"); 
getch();     
}

void submarino_comp(int m[10][10]){

	int pos_ale,columna,filas;//posicion aleatotria
   int h=0;
   srand(time(NULL));
   pos_ale=rand()%2;// nº aleatorio entre 0 y 1 -> para alternar aleatoriamente si es V o H   
   
   switch(pos_ale){
   case 0:
   srand(time(NULL));
       filas=rand()%10;// del 0 a   
       
       do{
          columna=rand()%8;
          
           
          		
       }while(m[filas][columna]==1 || m[filas][columna+1]==1 || m[filas][columna+2]==1);
      
	for(i = 0; i < 3; i++){
       m[filas][columna + i] = 1;
   	}

	
       
       

       break;

    case 1:
       srand(time(NULL));
	   columna=rand()%10;
	   
	   
           do{
           
      		filas=rand()%8;
      		
           
			
           }while(m[filas][columna]==1 || m[filas+1][columna]==1 || m[filas+2][columna]==1);
	   
    for(i = 0; i < 3; i++){
       m[filas+ i][columna] = 1;
   	}

	    
   
        break;
   }
  	printf("Submarino generado\n");
	getch();     
}

void crucero_comp(int m[10][10]){

	int pos_ale,columna,filas;//posicion aleatotria
   int h=0;
   srand(time(NULL));
   pos_ale=rand()%2;// nº aleatorio entre 0 y 1 -> para alternar aleatoriamente si es V o H   
   
   switch(pos_ale){
   case 0:
   srand(time(NULL));
       filas=rand()%10;// del 0 a   
       
       do{
          columna=rand()%8;
           

       }while(m[filas][columna]==1 || m[filas][columna+1]==1 || m[filas][columna+2]==1);
      
	for(i = 0; i < 3; i++){
       m[filas][columna + i] = 1;
   	}

	
       break;

    case 1:
       srand(time(NULL));
	   columna=rand()%10;
	   
	   
           do{
           
      		filas=rand()%8;
           
          
           }while(m[filas][columna]==1 || m[filas+1][columna]==1 || m[filas+2][columna]==1);
	   
    for(i = 0; i < 3; i++){
       m[filas+ i][columna] = 1;
   	}
         
   
        break;
   }
  	printf("Crucero generado\n");
	getch();  
}

void destructor_comp(int m[10][10]){

	int pos_ale,columna,filas;//posicion aleatotria
   int h=0;
   srand(time(NULL));
   pos_ale=rand()%2;// nº aleatorio entre 0 y 1 -> para alternar aleatoriamente si es V o H   
   
   switch(pos_ale){
   case 0:
   srand(time(NULL));
       filas=rand()%10;// del 0 a   
       
       do{
          columna=rand()%9;
           

       }while(m[filas][columna]==1 || m[filas][columna+1]==1);
      
	for(i = 0; i < 2; i++){
       m[filas][columna + i] = 1;
   	}

	
       break;

    case 1:
       srand(time(NULL));
	   columna=rand()%10;
	   
	   
           do{
           
      		filas=rand()%9;
           
           }while(m[filas][columna]==1 || m[filas+1][columna]==1);
	   
    for(i = 0; i < 2; i++){
       m[filas+ i][columna] = 1;
   	}

        
   
        break;
   }
  	printf("destructor generado\n");
	getch();  
}
void posiciona_comp(int m[10][10]){
  	portaaviones_comp(m);
  	acorazado_comp(m);
   	submarino_comp(m);
   	crucero_comp(m);
   	destructor_comp(m);
   	
   	
   	system("cls");
   	//Si se activa esta funcion se puede ver el tablero de la maquina
   	/*
	imprimetablero(m);
	*/
	getch();

}
